---
import { getImage } from "astro:assets";
import gradientBackground from "../images/backgrounds/gradient-2000.png";
import Project from "./Project.astro";
import planetFacts from "../images/projects/planet-facts.png";
import beatTrends from "../images/projects/beat-trends.png";
import myPortfolio from "../images/projects/my-portfolio.png";

const optimizedBackground = await getImage({
  src: gradientBackground,
});
---

<!-- <div
  style={`background-image: url('${optimizedBackground.src}'); background-size: cover; background-repeat: no-repeat;`}
  class="gradient-background min-h-96"
> -->
<div id="portfolio" class="relative invisible"></div>

<div class="gradient-background-2 min-h-96">
  <div class="container container-large">
    <div class="padding-global py-32">
      <div class="padding-extra">
        <h2 class="mb-20 text-center text-5xl">Recent Projects</h2>
        <div class="flex flex-col gap-12">
          <Project
            image={beatTrends}
            tags={[
              "Front-End Development",
              "D3",
              "React",
              "Python",
              "Pandas",
              "Web Scraping",
              "Data Visualization",
              "Data Analysis",
            ]}
            header="Beat Trends"
            text="Beat Trends is an interactive graphing app that visualizes the popularity of different dance music genres and artists over time. I started by building a specialized web scraper using Python and Selenium. This tool gathered historical data from the Beatport Top 100, capturing all track listings on the first day of each month from the past decade. After collecting the data, I used Pandas to clean it up and organize it into JSONs organized by year. For the final touch, I combined React and the powerful graph library D3.js to design the UI and visualize the data, making the app both informative and interactive."
            link="https://beat-trends.netlify.app/"
            links={{
              "View Code": "https://github.com/thomasfaddegon/beat-trends",
            }}
          />
          <Project
            image={planetFacts}
            tags={[
              "Front-End Development",
              "React",
              "Typescript",
              "Tailwind",
              "Zustand",
              "Figma",
            ]}
            header="Tom's Planet Facts"
            text="Embark on a cosmic journey with this dynamic Single Page Application (SPA) that guides you through the wonders of the solar system! I developed this project using Vite, Typescript, React, Tailwind CSS, and Figma designs sourced from FrontEndMentor.com. To ensure seamless navigation and a crisp UX, I integrated Zustand (a lightweight but powerful global state management library) along with custom animations for the planets and stars to bring the app to life."
            link="https://tomsplanetfacts.netlify.app/"
            links={{
              "View Code": "https://github.com/thomasfaddegon/planet-facts",
            }}
          />
          <Project
            image={myPortfolio}
            tags={[
              "Front-End Development",
              "Astro",
              "React",
              "Typescript",
              "Tailwind",
            ]}
            header="My Portfolio (This Site)"
            text="For this portfolio, I decided to use the static site generator Astro  due to its lightning fast loading times. I used typescirpt for type-saftey and an improved DX, and for CSS I utilized Tailwind for rapid component styling. Even though Astro is designed to ship without JavaScript by default, I found it straightforward to integrate React for those components where interactivity or dynamic data was necessary."
            link="https://thomasfaddegon.dev/"
            links={{
              "View Code": "https://github.com/thomasfaddegon/my-portfolio",
            }}
          />
          <!-- <Project
          image={beatTrends}
          header="Project Title"
          tags={[
            "Front-End Development",
            "Astro",
            "React",
            "Typescript",
            "Tailwind",
          ]}
          text="Since my portfolio is mostly a static site, I decided to use Astro to build it. For the components where I did need to add interactivity or dynamic data, I used React. I also used Tailwind for styling and Typescript for type safety. I'm really happy with the result and I think Astro is a great tool for building static sites."
          link="/"
        /> -->
        </div>
      </div>
    </div>
  </div>
</div>
