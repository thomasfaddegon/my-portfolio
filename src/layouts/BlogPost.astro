---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { Image } from "astro:assets";
import me from "../images/people/me-3.png";

interface BlogProps {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  heroImage?: string;
}

const { title, description, pubDate, updatedDate, heroImage } =
  Astro.props as BlogProps;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        padding: 0 5%;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      a:hover {
        color:;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article class="pb-12">
        <div class="hero-image pt-8">
          {
            heroImage && (
              <img width={1020} height={510} src={heroImage} alt="" />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <!-- <span class="text-purple hover:text-lightBlue" -->
              <span class="hover:text-lightBlue"
                ><a href="/" class="underline">Thomas Faddegon</a></span
              > &nbsp;|&nbsp;
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <div class="py-3">
              <h1 class="text-lightBlue">{title}</h1>
            </div>
            <hr />
          </div>
          <slot />
          <div class="border-t-2 border-white mt-12 mb-10"></div>
          <div class="flex flex-row gap-4">
            <div class="min-w-16">
              <a href="/">
                <Image
                  src={me}
                  alt="Author"
                  width={100}
                  height={100}
                  class="rounded-[100%]"
                /></a
              >
            </div>
            <div class="flex flex-col gap-2">
              <a href="/" class="no-underline"
                ><h4 class="text-purple hover:text-lightBlue mb-1">
                  Thomas Faddegon
                </h4></a
              >
              <p>
                Thomas is a User-Experience (UX) Engineer (half front-end
                developer, half UX designer) with a passion for clean code,
                great user experiences, and using data to tell impactful
                stories.
              </p>
            </div>
          </div>
        </div>
      </article>
      <Footer />
    </main>
  </body>
</html>
