---
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Button from "../components/Button.astro";
import ContactForm from "../components/ContactForm.astro";
import H3 from "../components//H3.astro";

function validateEmail(email: string) {
  // Simple regex for basic email validation
  const regex = /^\S+@\S+\.\S+$/;
  return regex.test(email);
}

function validateNotEmpty(value: string | null): boolean {
  return value !== null && value.trim().length > 0;
}

let formData = {};
let formErrors = {
  name: "",
  email: "",
  message: "",
};

// Check for POST method and process form data
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = String(data.get("name") || "");
    const email = String(data.get("email") || "");
    const message = String(data.get("message") || "");

    // Validate form data
    formErrors.name = validateNotEmpty(name) ? "" : "First name is required";
    formErrors.email = validateEmail(email) ? "" : "Email is invalid";
    formErrors.message = validateNotEmpty(message) ? "" : "Message is required";

    // If there are no errors, process form submission
    if (!Object.values(formErrors).some(Boolean)) {
      formData = {};
      return Astro.redirect("/thank-you");
    }
  } catch (error) {
    // Handle errors
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="h-full">
    <main class="flex flex-col min-h-screen">
      <!-- Hero Section -->
      <div class="container container-large">
        <div class="padding-global">
          <Nav title={SITE_TITLE} />
        </div>
      </div>
      <section class="flex-grow">
        <div class="container container-large">
          <div class="padding-global">
            <div
              class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 w-full pt-16 pb-12"
              id="header-content"
            >
              <div
                class="col-span-1 lg:col-span-2 md:pr-12 flex flex-col gap-7"
                id="header-text"
              >
                <h1>
                  Hi! I'm Thomas. <br /> I bring websites & digital applications
                  to life.
                </h1>
                <h4>Let's stay in touch.</h4>
                <div class="max-w-lg">
                  <p>
                    Whether you're looking for a full-stack developer, a UX/UI
                    specialist, or a product strategist, I'd love to hear from
                    you.
                  </p>
                </div>
              </div>
              <div
                class="col-span-1 order-first md:order-last"
                id="header-image"
              >
                <!-- <img
                  src="https://placehold.co/400x450"
                  alt="Thomas"
                  class="rounded-xl"
                /> -->
              </div>
            </div>
            <div class="mb-40">
              <form method="POST" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label
                      for="first_name"
                      class="block text-sm font-medium text-gray-300"
                      ><H3 header="Name" /></label
                    >
                    <input
                      type="text"
                      name="name"
                      id="name"
                      required
                      class="w-full p-2 bg-gray-700 border border-gray-600 text-white"
                    />
                    {
                      formErrors.name && (
                        <p class="text-red-500">{formErrors.name}</p>
                      )
                    }
                  </div>
                  <div>
                    <label
                      for="email"
                      class="block text-sm font-medium text-gray-300"
                      ><H3 header="email" /></label
                    >
                    <input
                      type="email"
                      name="email"
                      id="email"
                      required
                      class="w-full p-2 bg-gray-700 border border-gray-600 text-white"
                    />
                    {
                      formErrors.email && (
                        <p class="text-red-500">{formErrors.email}</p>
                      )
                    }
                  </div>
                </div>
                <div>
                  <label
                    for="message"
                    class="block text-sm font-medium text-gray-300"
                    ><H3 header="Message" /></label
                  >
                  <textarea
                    name="message"
                    id="message"
                    required
                    rows="8"
                    class="w-full p-2 bg-gray-700 border border-gray-600 text-white"
                  ></textarea>
                  {
                    formErrors.message && (
                      <p class="text-red-500">{formErrors.message}</p>
                    )
                  }
                </div>
                <div>
                  <Button text="Get In Touch" type="primary" link="/contact" />
                </div>
              </form>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </main>
    <style>
      input,
      textarea {
        background-color: transparent;
        border: white 1px solid;
        border-radius: 0.4rem;
        margin-bottom: 1.25rem;
      }
      label {
        margin-bottom: 0.5rem;
      }
    </style>
  </body>
</html>
